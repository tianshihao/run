# Exercises for book C++ Concurrency in action.
project(cpp-concurrency-in-action)

message(STATUS "Configuring cpp-concurrency-in-action...")

# Enable pthread.
FIND_PACKAGE(Threads REQUIRED)

GET_SUB_DIR_ABS_LIST_RECURSIVELY(${CMAKE_CURRENT_LIST_DIR} SUB_DIR_ABS_LIST)
FOREACH(IT ${SUB_DIR_ABS_LIST})
  MESSAGE(STATUS ${IT})
ENDFOREACH(IT ${SUB_DIR_ABS_LIST})

GENERATE_TARGET_NAME(${CMAKE_CURRENT_LIST_DIR} "${SUB_DIR_ABS_LIST}" TARGET_NAME_LIST)
FOREACH(IT ${TARGET_NAME_LIST})
  MESSAGE(STATUS ${IT})
ENDFOREACH(IT ${TARGET_NAME_LIST})

LIST(LENGTH SUB_DIR_ABS_LIST LENGTH1)
MATH(EXPR LENGTH2 "${LENGTH1} - 1")

FOREACH(VAL RANGE ${LENGTH2})
  LIST(GET SUB_DIR_ABS_LIST ${VAL} SUB_DIR_ABS)
  LIST(GET TARGET_NAME_LIST ${VAL} TARGET_NAME)
  MESSAGE(STATUS "${SUB_DIR_ABS}:${TARGET_NAME}")

  SET(SOURCE_FILES "")
  AUX_SOURCE_DIRECTORY(${SUB_DIR_ABS}/src SOURCE_FILES)
  ADD_EXECUTABLE(${TARGET_NAME} ${SOURCE_FILES})

  TARGET_COMPILE_FEATURES(${TARGET_NAME} PRIVATE cxx_std_17)

  # SETTING INCLUDE DIRECTORY AND LINKING.
  TARGET_INCLUDE_DIRECTORIES(${TARGET_NAME} PUBLIC ${SUB_DIR_ABS}/include)
  if(CMAKE_THREAD_LIBS_INIT)
    target_link_libraries(${TARGET_NAME} "${CMAKE_THREAD_LIBS_INIT}")
  endif()

ENDFOREACH(VAL RANGE ${LENGTH2})
