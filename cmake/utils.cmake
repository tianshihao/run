MACRO(GETSUBDIRLIST result curdir)
  FILE(GLOB children RELATIVE ${curdir} ${curdir}/*)
  SET(dirlist "")
  FOREACH(child ${children})
    IF(IS_DIRECTORY ${curdir}/${child})
      LIST(APPEND dirlist ${child})
    ENDIF()
  ENDFOREACH()
  SET(${result} ${dirlist})
ENDMACRO(GETSUBDIRLIST result curdir)

MACRO(GET_SUB_DIR_ABS_LIST_RECURSIVELY CUR_DIR RESULT_OUTPUT)
  FILE(GLOB SUB_DIRS RELATIVE ${CUR_DIR} ${CUR_DIR}/*)

  SET(RESULT "")
  SET(SUB_DIR_ABS_LIST "")

  # convert all subdir into abs
  FOREACH(SUB_DIR_REL ${SUB_DIRS})
    MESSAGE(STATUS "ITEM IN " ${CUR_DIR} ": " ${SUB_DIR_REL})

    SET(SUB_DIR_ABS ${CUR_DIR}/${SUB_DIR_REL})

    IF(IS_DIRECTORY ${SUB_DIR_ABS})
      MESSAGE(STATUS "FIND DIRECTORY: " ${SUB_DIR_ABS})
      MESSAGE(STATUS "ADD TO SEARCH LIST")
      LIST(APPEND SUB_DIR_ABS_LIST ${SUB_DIR_ABS})
    ENDIF()
  ENDFOREACH()

  MESSAGE(STATUS "\n")
  MESSAGE(STATUS "SEARCH SUB_DIR_ABS_LIST")


  LIST(LENGTH SUB_DIR_ABS_LIST len)
  MESSAGE(STATUS "INIT FOREACH LIST LENGTH: " ${len})

  WHILE(SUB_DIR_ABS_LIST)

    LIST(SORT SUB_DIR_ABS_LIST)

    FOREACH(SUB_DIR_ABS ${SUB_DIR_ABS_LIST})

      GETSUBDIRLIST(ITEM_IN_SUB_DIR ${SUB_DIR_ABS})

      MESSAGE(STATUS "ITEMS IN " ${SUB_DIR_ABS} " ARE:")
      MESSAGE(STATUS ${ITEM_IN_SUB_DIR})

      # IF FIRST SUB DIR CONTAIN INCLUDE AND SRC
      # Such as /root/source/repos/run/replica/cpp-primer/chapter15/quote
      # or /root/source/repos/run/replica/cpp-primer/chapter16
      IF ("include" IN_LIST ITEM_IN_SUB_DIR AND "src" IN_LIST ITEM_IN_SUB_DIR)
        MESSAGE(STATUS "FIND EXECUTABLE IN: " ${SUB_DIR_ABS})
        MESSAGE(STATUS "ADD " ${SUB_DIR_ABS} " INTO " "RESULT")
        LIST(APPEND RESULT ${SUB_DIR_ABS})
      # ELSE FIND SUB DIRECTORIS OF SUB DIR.
      # Such as /root/source/repos/run/replica/cpp-primer/chapter15, then find its subdirectory.
      ELSE()
        # APPEND THE SUB DIRECTORIES THAT NOT CONTAINS INCLUDE AND SRC INTO LIST WE TRAVERSE.
        FOREACH(ITEM ${ITEM_IN_SUB_DIR})
          MESSAGE(STATUS "ITEM " ${ITEM} " IS A DIRECTORY MIGHT CONTAINS include AND src")
          SET(ITEM_PATH ${SUB_DIR_ABS}/${ITEM})
          MESSAGE(STATUS "ITS PATH IS: " ${ITEM_PATH})
          IF (IS_DIRECTORY ${ITEM_PATH})
            MESSAGE(STATUS "ADD " ${ITEM_PATH} " INTO " "SUB_DIR_ABS_LIST")
            LIST(APPEND SUB_DIR_ABS_LIST ${ITEM_PATH})
          ENDIF()
        ENDFOREACH()
      ENDIF()

      # LIST(POP_FRONT SUB_DIR_ABS_LIST)
      LIST(REMOVE_ITEM SUB_DIR_ABS_LIST ${SUB_DIR_ABS})
      MESSAGE(STATUS "THE SUB_DIR_ABS_LIST HAVE ITEMS: ")
      MESSAGE(STATUS ${SUB_DIR_ABS_LIST})

    ENDFOREACH()

    LIST(LENGTH SUB_DIR_ABS_LIST LEN)
    MESSAGE(STATUS "AFTER FOREACH LIST LENGTH: " ${LEN})
    MESSAGE(STATUS "THERE ARE: ")
    FOREACH(IT ${SUB_DIR_ABS_LIST})
      MESSAGE(STATUS ${IT})
    ENDFOREACH(IT ${SUB_DIR_ABS_LIST})

  ENDWHILE()

  SET(${RESULT_OUTPUT} ${RESULT})

  # LIST(SORT RESULT_OUTPUT)
  
ENDMACRO(GET_SUB_DIR_ABS_LIST_RECURSIVELY CUR_DIR RESULT_OUTPUT)

MACRO(GENERATE_TARGET_NAME BASE_DIRECTORY SUB_DIR_ABS_LIST TRAGET_NAME_LIST)

  SET(RESULT "")
  # BASE_DIRECTORY: /root/source/repos/run/replica/cpp-primer
  MESSAGE(STATUS "BASE_DIRECTORY: " ${BASE_DIRECTORY})
  # TARGET_NAME_BASE: cpp-primer
  GET_FILENAME_COMPONENT(TARGET_NAME_BASE ${BASE_DIRECTORY} NAME) 

  # SUB_DIR_ABS
  # /root/source/repos/run/replica/cpp-primer/chapter15/quote
  # SUB_DIR_ABS - BASE_DIRECTORY
  # chapter15/quote
  # Then transfer it into chapter15-quote
  # Final get TARGET_NAME_BASE-chapter15-quote = cpp-primer-chapter15-quote
  # This is the target name we want.
  FOREACH(SUB_DIR_ABS ${SUB_DIR_ABS_LIST})
    # DROP THE PART OF BASE_DIRECTORY OF SUB_DIR_ABS
    STRING(REPLACE ${BASE_DIRECTORY} "" SUB_DIR_NO_PREFIX ${SUB_DIR_ABS} )

    SET(TARGET_NAME ${TARGET_NAME_BASE}${SUB_DIR_NO_PREFIX})
    # TARGET_NAME: cpp-primer-chapter15-quote
    STRING(REPLACE "/" "-" TARGET_NAME ${TARGET_NAME} )

    LIST(APPEND TARGET_NAME_LIST ${TARGET_NAME})
    
  ENDFOREACH(SUB_DIR_ABS ${SUB_DIR_ABS_LIST})

  # LIST(SORT TARGET_NAME_LIST)

ENDMACRO(GENERATE_TARGET_NAME BASE_DIRECTORY SUB_DIR_ABS_LIST TARGET_NAME_LIST)
